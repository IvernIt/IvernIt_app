// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `soporte.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package soporte;

/**
 * Provides type-specific helper functions.
 **/
public final class ModeradorPrxHelper extends Ice.ObjectPrxHelperBase implements ModeradorPrx
{
    private static final String __addCliente_name = "addCliente";

    public void addCliente(ClientePrx cliente)
    {
        addCliente(cliente, null, false);
    }

    public void addCliente(ClientePrx cliente, java.util.Map<String, String> __ctx)
    {
        addCliente(cliente, __ctx, true);
    }

    private void addCliente(ClientePrx cliente, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_addCliente(begin_addCliente(cliente, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_addCliente(ClientePrx cliente)
    {
        return begin_addCliente(cliente, null, false, false, null);
    }

    public Ice.AsyncResult begin_addCliente(ClientePrx cliente, java.util.Map<String, String> __ctx)
    {
        return begin_addCliente(cliente, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_addCliente(ClientePrx cliente, Ice.Callback __cb)
    {
        return begin_addCliente(cliente, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_addCliente(ClientePrx cliente, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_addCliente(cliente, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_addCliente(ClientePrx cliente, Callback_Moderador_addCliente __cb)
    {
        return begin_addCliente(cliente, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_addCliente(ClientePrx cliente, java.util.Map<String, String> __ctx, Callback_Moderador_addCliente __cb)
    {
        return begin_addCliente(cliente, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_addCliente(ClientePrx cliente, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_addCliente(cliente, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_addCliente(ClientePrx cliente, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_addCliente(cliente, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_addCliente(ClientePrx cliente, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_addCliente(cliente, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_addCliente(ClientePrx cliente, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_addCliente(cliente, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_addCliente(ClientePrx cliente, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_addCliente(cliente, 
                                __ctx, 
                                __explicitCtx, 
                                __synchronous, 
                                new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_addCliente(ClientePrx cliente, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__addCliente_name, __cb);
        try
        {
            __result.prepare(__addCliente_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            ClientePrxHelper.__write(__os, cliente);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_addCliente(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __addCliente_name);
    }

    private static final String __addOficinista_name = "addOficinista";

    public void addOficinista(OficinistaPrx oficinista)
    {
        addOficinista(oficinista, null, false);
    }

    public void addOficinista(OficinistaPrx oficinista, java.util.Map<String, String> __ctx)
    {
        addOficinista(oficinista, __ctx, true);
    }

    private void addOficinista(OficinistaPrx oficinista, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_addOficinista(begin_addOficinista(oficinista, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista)
    {
        return begin_addOficinista(oficinista, null, false, false, null);
    }

    public Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista, java.util.Map<String, String> __ctx)
    {
        return begin_addOficinista(oficinista, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista, Ice.Callback __cb)
    {
        return begin_addOficinista(oficinista, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_addOficinista(oficinista, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista, Callback_Moderador_addOficinista __cb)
    {
        return begin_addOficinista(oficinista, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista, java.util.Map<String, String> __ctx, Callback_Moderador_addOficinista __cb)
    {
        return begin_addOficinista(oficinista, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_addOficinista(oficinista, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_addOficinista(oficinista, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_addOficinista(oficinista, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_addOficinista(oficinista, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista, 
                                                java.util.Map<String, String> __ctx, 
                                                boolean __explicitCtx, 
                                                boolean __synchronous, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_addOficinista(oficinista, 
                                   __ctx, 
                                   __explicitCtx, 
                                   __synchronous, 
                                   new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_addOficinista(OficinistaPrx oficinista, 
                                                java.util.Map<String, String> __ctx, 
                                                boolean __explicitCtx, 
                                                boolean __synchronous, 
                                                IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__addOficinista_name, __cb);
        try
        {
            __result.prepare(__addOficinista_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            OficinistaPrxHelper.__write(__os, oficinista);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_addOficinista(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __addOficinista_name);
    }

    private static final String __removeCliente_name = "removeCliente";

    public void removeCliente(ClientePrx cliente)
    {
        removeCliente(cliente, null, false);
    }

    public void removeCliente(ClientePrx cliente, java.util.Map<String, String> __ctx)
    {
        removeCliente(cliente, __ctx, true);
    }

    private void removeCliente(ClientePrx cliente, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_removeCliente(begin_removeCliente(cliente, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_removeCliente(ClientePrx cliente)
    {
        return begin_removeCliente(cliente, null, false, false, null);
    }

    public Ice.AsyncResult begin_removeCliente(ClientePrx cliente, java.util.Map<String, String> __ctx)
    {
        return begin_removeCliente(cliente, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_removeCliente(ClientePrx cliente, Ice.Callback __cb)
    {
        return begin_removeCliente(cliente, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_removeCliente(ClientePrx cliente, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_removeCliente(cliente, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_removeCliente(ClientePrx cliente, Callback_Moderador_removeCliente __cb)
    {
        return begin_removeCliente(cliente, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_removeCliente(ClientePrx cliente, java.util.Map<String, String> __ctx, Callback_Moderador_removeCliente __cb)
    {
        return begin_removeCliente(cliente, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_removeCliente(ClientePrx cliente, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_removeCliente(cliente, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_removeCliente(ClientePrx cliente, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_removeCliente(cliente, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_removeCliente(ClientePrx cliente, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_removeCliente(cliente, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_removeCliente(ClientePrx cliente, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_removeCliente(cliente, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_removeCliente(ClientePrx cliente, 
                                                java.util.Map<String, String> __ctx, 
                                                boolean __explicitCtx, 
                                                boolean __synchronous, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_removeCliente(cliente, 
                                   __ctx, 
                                   __explicitCtx, 
                                   __synchronous, 
                                   new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_removeCliente(ClientePrx cliente, 
                                                java.util.Map<String, String> __ctx, 
                                                boolean __explicitCtx, 
                                                boolean __synchronous, 
                                                IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__removeCliente_name, __cb);
        try
        {
            __result.prepare(__removeCliente_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            ClientePrxHelper.__write(__os, cliente);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_removeCliente(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __removeCliente_name);
    }

    private static final String __removeOficinista_name = "removeOficinista";

    public void removeOficinista(OficinistaPrx oficinista)
    {
        removeOficinista(oficinista, null, false);
    }

    public void removeOficinista(OficinistaPrx oficinista, java.util.Map<String, String> __ctx)
    {
        removeOficinista(oficinista, __ctx, true);
    }

    private void removeOficinista(OficinistaPrx oficinista, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_removeOficinista(begin_removeOficinista(oficinista, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista)
    {
        return begin_removeOficinista(oficinista, null, false, false, null);
    }

    public Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista, java.util.Map<String, String> __ctx)
    {
        return begin_removeOficinista(oficinista, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista, Ice.Callback __cb)
    {
        return begin_removeOficinista(oficinista, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_removeOficinista(oficinista, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista, Callback_Moderador_removeOficinista __cb)
    {
        return begin_removeOficinista(oficinista, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista, java.util.Map<String, String> __ctx, Callback_Moderador_removeOficinista __cb)
    {
        return begin_removeOficinista(oficinista, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_removeOficinista(oficinista, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_removeOficinista(oficinista, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_removeOficinista(oficinista, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_removeOficinista(oficinista, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista, 
                                                   java.util.Map<String, String> __ctx, 
                                                   boolean __explicitCtx, 
                                                   boolean __synchronous, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_removeOficinista(oficinista, 
                                      __ctx, 
                                      __explicitCtx, 
                                      __synchronous, 
                                      new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_removeOficinista(OficinistaPrx oficinista, 
                                                   java.util.Map<String, String> __ctx, 
                                                   boolean __explicitCtx, 
                                                   boolean __synchronous, 
                                                   IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__removeOficinista_name, __cb);
        try
        {
            __result.prepare(__removeOficinista_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            OficinistaPrxHelper.__write(__os, oficinista);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_removeOficinista(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __removeOficinista_name);
    }

    private static final String __responderCliente_name = "responderCliente";

    public void responderCliente(OficinistaPrx oficinista, String mensaje)
    {
        responderCliente(oficinista, mensaje, null, false);
    }

    public void responderCliente(OficinistaPrx oficinista, String mensaje, java.util.Map<String, String> __ctx)
    {
        responderCliente(oficinista, mensaje, __ctx, true);
    }

    private void responderCliente(OficinistaPrx oficinista, String mensaje, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_responderCliente(begin_responderCliente(oficinista, mensaje, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, String mensaje)
    {
        return begin_responderCliente(oficinista, mensaje, null, false, false, null);
    }

    public Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, String mensaje, java.util.Map<String, String> __ctx)
    {
        return begin_responderCliente(oficinista, mensaje, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, String mensaje, Ice.Callback __cb)
    {
        return begin_responderCliente(oficinista, mensaje, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, String mensaje, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_responderCliente(oficinista, mensaje, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, String mensaje, Callback_Moderador_responderCliente __cb)
    {
        return begin_responderCliente(oficinista, mensaje, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, String mensaje, java.util.Map<String, String> __ctx, Callback_Moderador_responderCliente __cb)
    {
        return begin_responderCliente(oficinista, mensaje, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, 
                                                  String mensaje, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_responderCliente(oficinista, mensaje, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, 
                                                  String mensaje, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_responderCliente(oficinista, mensaje, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, 
                                                  String mensaje, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_responderCliente(oficinista, mensaje, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, 
                                                  String mensaje, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_VoidCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_responderCliente(oficinista, mensaje, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, 
                                                   String mensaje, 
                                                   java.util.Map<String, String> __ctx, 
                                                   boolean __explicitCtx, 
                                                   boolean __synchronous, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_responderCliente(oficinista, 
                                      mensaje, 
                                      __ctx, 
                                      __explicitCtx, 
                                      __synchronous, 
                                      new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_responderCliente(OficinistaPrx oficinista, 
                                                   String mensaje, 
                                                   java.util.Map<String, String> __ctx, 
                                                   boolean __explicitCtx, 
                                                   boolean __synchronous, 
                                                   IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__responderCliente_name, __cb);
        try
        {
            __result.prepare(__responderCliente_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            OficinistaPrxHelper.__write(__os, oficinista);
            __os.writeString(mensaje);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_responderCliente(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __responderCliente_name);
    }

    private static final String __responderOficinista_name = "responderOficinista";

    public void responderOficinista(ClientePrx cliente, String mensaje)
    {
        responderOficinista(cliente, mensaje, null, false);
    }

    public void responderOficinista(ClientePrx cliente, String mensaje, java.util.Map<String, String> __ctx)
    {
        responderOficinista(cliente, mensaje, __ctx, true);
    }

    private void responderOficinista(ClientePrx cliente, String mensaje, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_responderOficinista(begin_responderOficinista(cliente, mensaje, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, String mensaje)
    {
        return begin_responderOficinista(cliente, mensaje, null, false, false, null);
    }

    public Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, String mensaje, java.util.Map<String, String> __ctx)
    {
        return begin_responderOficinista(cliente, mensaje, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, String mensaje, Ice.Callback __cb)
    {
        return begin_responderOficinista(cliente, mensaje, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, String mensaje, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_responderOficinista(cliente, mensaje, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, String mensaje, Callback_Moderador_responderOficinista __cb)
    {
        return begin_responderOficinista(cliente, mensaje, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, String mensaje, java.util.Map<String, String> __ctx, Callback_Moderador_responderOficinista __cb)
    {
        return begin_responderOficinista(cliente, mensaje, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, 
                                                     String mensaje, 
                                                     IceInternal.Functional_VoidCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_responderOficinista(cliente, mensaje, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, 
                                                     String mensaje, 
                                                     IceInternal.Functional_VoidCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_responderOficinista(cliente, mensaje, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, 
                                                     String mensaje, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_VoidCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_responderOficinista(cliente, mensaje, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, 
                                                     String mensaje, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_VoidCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_responderOficinista(cliente, mensaje, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, 
                                                      String mensaje, 
                                                      java.util.Map<String, String> __ctx, 
                                                      boolean __explicitCtx, 
                                                      boolean __synchronous, 
                                                      IceInternal.Functional_VoidCallback __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_responderOficinista(cliente, 
                                         mensaje, 
                                         __ctx, 
                                         __explicitCtx, 
                                         __synchronous, 
                                         new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_responderOficinista(ClientePrx cliente, 
                                                      String mensaje, 
                                                      java.util.Map<String, String> __ctx, 
                                                      boolean __explicitCtx, 
                                                      boolean __synchronous, 
                                                      IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__responderOficinista_name, __cb);
        try
        {
            __result.prepare(__responderOficinista_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            ClientePrxHelper.__write(__os, cliente);
            __os.writeString(mensaje);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_responderOficinista(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __responderOficinista_name);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ModeradorPrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), ModeradorPrx.class, ModeradorPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ModeradorPrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), ModeradorPrx.class, ModeradorPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ModeradorPrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), ModeradorPrx.class, ModeradorPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ModeradorPrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), ModeradorPrx.class, ModeradorPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static ModeradorPrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, ModeradorPrx.class, ModeradorPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static ModeradorPrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, ModeradorPrx.class, ModeradorPrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::soporte::Moderador"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, ModeradorPrx v)
    {
        __os.writeProxy(v);
    }

    public static ModeradorPrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            ModeradorPrxHelper result = new ModeradorPrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
